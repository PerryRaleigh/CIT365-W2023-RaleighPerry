@model PaginatedList<RaleighUniversity.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form class="d-flex" asp-action="Index" method="get">
    <div class="container">
        <div class="col-md-4">
            <p>
                @*<label for="SearchString">Find by name: </label>*@
                <input class="form-control me-sm-2"
                       type="search"
                       placeholder="Find by name"
                       id="SearchString"
                       name="SearchString"
                       value="@ViewData["CurrentFilter"]" />
            </p>
            <p>
                <input type="submit" value="Search" class="btn btn-secondary btn-sm" /> 
                <a class="btn btn-secondary btn-sm" asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </div>
</form>

<table class="table table-striped table-active">
    <thead class="">
        <tr>
            <th>
                <a
                    asp-action="Index"
                    asp-route-sortOrder="@ViewData["NameSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Last Name
                </a>
            </th>
            <th>
                First Name
            </th>
            <th>
                <a
                    asp-action="Index"
                    asp-route-sortOrder="@ViewData["DateSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Enrollment Date
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary btn-sm @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary btn-sm @nextDisabled">
    Next
</a>
